ggsave(filename = "Figure Newww.png")
# Detect the events in a time series
OISST <- readRDS("shimoda_time_series_updated.rda")
ts <- ts2clm(OISST, climatologyPeriod = c("1982-01-01", "2011-12-31"))
mhw <- detect_event(ts)
mhw2 <- mhw$climatology %>%
filter(between(t, as.Date("2019-05-24"), as.Date("2020-02-15")))
mhw2.plot <- ggplot(data = mhw2, aes(x = t)) +
geom_line(aes(y = temp, colour = "temp")) +
geom_line(aes(y = thresh, colour = "thresh"), size = 0.5, lty = "solid") +
geom_line(aes(y = seas, colour = "seas"), size = 0.5, lty = "dotted") +
geom_flame(aes(y = temp, y2 = thresh, fill = "event"), show.legend = T) +
scale_colour_manual(name = "Line Colour",
values = c("temp" = "black",
"thresh" =  "grey60",
"seas" = "black")) +
scale_fill_manual(name = "Event Colour",
values = c("event" = "red")) +
scale_x_date(expand = c(0,0), date_breaks = "1 month", date_labels = "%b %Y") +
guides(colour = guide_legend(override.aes = list(fill = NA))) +
labs(y= expression(atop(paste(bold("Daily SST")), paste("( ",degree ~C," )"))))  +
coord_cartesian(xlim = c(as.Date("2019-05-24"), as.Date("2020-02-15")), ylim = c(15, 30)) +
theme_pubr() + theme(legend.position = "none") +
theme(
axis.title.x = element_blank(),
axis.title.y = element_text (size = 9),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
axis.ticks.x = element_blank(),
plot.margin = margin(6,6,3,6, unit = "pt")) +
scale_y_continuous(expand = c(0,0), limits = c(-2,30))
#########################
#read data
weekly.suzaki.data <- read_csv("2019_Incidence_2.5_Suzaki.csv") %>%
mutate(Date = as.Date(Date))  %>%
filter(between(Date, as.Date("2019-05-24"), as.Date("2020-02-15")))
weekly.shidagaura.data <- read_csv("2019_Incidence_2.5.recheck.csv")%>%
mutate(Date = as.Date(Date))  %>%
filter(between(Date, as.Date("2019-05-24"), as.Date("2020-02-15")))
#suzaki plot
weekly.suzaki.plot <- ggplot(data = weekly.suzaki.data, aes(x = Date, y = Incidence)) +
geom_point() +
geom_segment(aes(xend = Date, yend = 0 )) +
labs(x="",y = expression(atop(paste(bold("Site 2")), paste("Incidence")))) +
geom_hline(yintercept = 0, color = "grey") +
theme_pubr() +
theme(
axis.title.x = element_text (size = 10),
axis.title.y = element_text (size = 10),
axis.text.x = element_text (size = 8),
axis.text.y = element_text(size = 8)) +
scale_x_date(expand = c(0,0),date_breaks = "1 month", date_labels = "%m-%y") +
scale_y_continuous(expand = c(0,0), limits = c(-2,30)) +
coord_cartesian(xlim = c(as.Date("2019-05-24"), as.Date("2020-02-15")))
weekly.shidagaura.plot <- ggplot(data = weekly.shidagaura.data, aes(x = Date, y = Incidence)) +
geom_point() +
geom_segment(aes(xend = Date, yend = 0 )) +
labs(x="",y = expression(atop(paste(bold("Site 1")), paste("Incidence")))) +
geom_hline(yintercept = 0, color = "grey") +
theme_pubr() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_text (size = 10),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
axis.ticks.x = element_blank())+
scale_x_date(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0), limits = c(-2,30))+
coord_cartesian(xlim = c(as.Date("2019-05-24"), as.Date("2020-02-15")))
(mhw2.plot/weekly.shidagaura.plot/weekly.suzaki.plot) + plot_annotation(tag_levels = "A")
ggsave(filename = "Figure Newww.png")
# Detect the events in a time series
OISST <- readRDS("shimoda_time_series_updated.rda")
ts <- ts2clm(OISST, climatologyPeriod = c("1982-01-01", "2011-12-31"))
mhw <- detect_event(ts)
mhw2 <- mhw$climatology %>%
filter(between(t, as.Date("2019-05-24"), as.Date("2020-02-15")))
mhw2.plot <- ggplot(data = mhw2, aes(x = t)) +
geom_line(aes(y = temp, colour = "temp")) +
geom_line(aes(y = thresh, colour = "thresh"), size = 0.5, lty = "solid") +
geom_line(aes(y = seas, colour = "seas"), size = 0.5, lty = "dotted") +
geom_flame(aes(y = temp, y2 = thresh, fill = "event"), show.legend = T) +
scale_colour_manual(name = "Line Colour",
values = c("temp" = "black",
"thresh" =  "grey60",
"seas" = "black")) +
scale_fill_manual(name = "Event Colour",
values = c("event" = "red")) +
scale_x_date(expand = c(0,0), date_breaks = "1 month", date_labels = "%b %Y") +
guides(colour = guide_legend(override.aes = list(fill = NA))) +
labs(y= expression(atop(paste(bold("Daily SST")), paste("( ",degree ~C," )"))))  +
coord_cartesian(xlim = c(as.Date("2019-05-24"), as.Date("2020-02-15")), ylim = c(15, 30)) +
theme_pubr() + theme(legend.position = "none") +
theme(
axis.title.x = element_blank(),
axis.title.y = element_text (size = 9),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
axis.ticks.x = element_blank(),
plot.margin = margin(6,6,3,6, unit = "pt")) +
scale_y_continuous(expand = c(0,0), limits = c(-2,30))
#########################
#read data
weekly.suzaki.data <- read_csv("2019_Incidence_2.5_Suzaki.csv") %>%
mutate(Date = as.Date(Date))  %>%
filter(between(Date, as.Date("2019-05-24"), as.Date("2020-02-15")))
weekly.shidagaura.data <- read_csv("2019_Incidence_2.5.recheck.csv")%>%
mutate(Date = as.Date(Date))  %>%
filter(between(Date, as.Date("2019-05-24"), as.Date("2020-02-15")))
#suzaki plot
weekly.suzaki.plot <- ggplot(data = weekly.suzaki.data, aes(x = Date, y = Incidence)) +
geom_point() +
geom_segment(aes(xend = Date, yend = 0 )) +
labs(x="",y = expression(atop(paste(bold("Site 2")), paste("Incidence")))) +
geom_hline(yintercept = 0, color = "grey") +
theme_pubr() +
theme(
axis.title.x = element_text (size = 10),
axis.title.y = element_text (size = 10),
axis.text.x = element_text (size = 8),
axis.text.y = element_text(size = 8)) +
scale_x_date(expand = c(0,0),date_breaks = "1 month", date_labels = "%m-%y") +
scale_y_continuous(expand = c(0.001,0), limits = c(-2,30)) +
coord_cartesian(xlim = c(as.Date("2019-05-24"), as.Date("2020-02-15")))
weekly.shidagaura.plot <- ggplot(data = weekly.shidagaura.data, aes(x = Date, y = Incidence)) +
geom_point() +
geom_segment(aes(xend = Date, yend = 0 )) +
labs(x="",y = expression(atop(paste(bold("Site 1")), paste("Incidence")))) +
geom_hline(yintercept = 0, color = "grey") +
theme_pubr() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_text (size = 10),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
axis.ticks.x = element_blank())+
scale_x_date(expand = c(0,0)) +
scale_y_continuous(expand = c(0.001,0), limits = c(-2,30))+
coord_cartesian(xlim = c(as.Date("2019-05-24"), as.Date("2020-02-15")))
(mhw2.plot/weekly.shidagaura.plot/weekly.suzaki.plot) + plot_annotation(tag_levels = "A")
ggsave(filename = "Figure Newww.png")
# Detect the events in a time series
OISST <- readRDS("shimoda_time_series_updated.rda")
ts <- ts2clm(OISST, climatologyPeriod = c("1982-01-01", "2011-12-31"))
mhw <- detect_event(ts)
mhw2 <- mhw$climatology %>%
filter(between(t, as.Date("2019-05-24"), as.Date("2020-02-15")))
mhw2.plot <- ggplot(data = mhw2, aes(x = t)) +
geom_line(aes(y = temp, colour = "temp")) +
geom_line(aes(y = thresh, colour = "thresh"), size = 0.5, lty = "solid") +
geom_line(aes(y = seas, colour = "seas"), size = 0.5, lty = "dotted") +
geom_flame(aes(y = temp, y2 = thresh, fill = "event"), show.legend = T) +
scale_colour_manual(name = "Line Colour",
values = c("temp" = "black",
"thresh" =  "grey60",
"seas" = "black")) +
scale_fill_manual(name = "Event Colour",
values = c("event" = "red")) +
scale_x_date(expand = c(0,0), date_breaks = "1 month", date_labels = "%b %Y") +
guides(colour = guide_legend(override.aes = list(fill = NA))) +
labs(y= expression(atop(paste(bold("Daily SST")), paste("( ",degree ~C," )"))))  +
coord_cartesian(xlim = c(as.Date("2019-05-24"), as.Date("2020-02-15")), ylim = c(15, 30)) +
theme_pubr() + theme(legend.position = "none") +
theme(
axis.title.x = element_blank(),
axis.title.y = element_text (size = 9),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
axis.ticks.x = element_blank(),
plot.margin = margin(6,6,3,6, unit = "pt")) +
scale_y_continuous(expand = c(0,0), limits = c(-2,30))
#########################
#read data
weekly.suzaki.data <- read_csv("2019_Incidence_2.5_Suzaki.csv") %>%
mutate(Date = as.Date(Date))  %>%
filter(between(Date, as.Date("2019-05-24"), as.Date("2020-02-15")))
weekly.shidagaura.data <- read_csv("2019_Incidence_2.5.recheck.csv")%>%
mutate(Date = as.Date(Date))  %>%
filter(between(Date, as.Date("2019-05-24"), as.Date("2020-02-15")))
#suzaki plot
weekly.suzaki.plot <- ggplot(data = weekly.suzaki.data, aes(x = Date, y = Incidence)) +
geom_point() +
geom_segment(aes(xend = Date, yend = 0 )) +
labs(x="",y = expression(atop(paste(bold("Site 2")), paste("Incidence")))) +
geom_hline(yintercept = 0, color = "grey") +
theme_pubr() +
theme(
axis.title.x = element_text (size = 10),
axis.title.y = element_text (size = 10),
axis.text.x = element_text (size = 8),
axis.text.y = element_text(size = 8)) +
scale_x_date(expand = c(0,0),date_breaks = "1 month", date_labels = "%m-%y") +
scale_y_continuous(expand = c(0.01,0), limits = c(-2,30)) +
coord_cartesian(xlim = c(as.Date("2019-05-24"), as.Date("2020-02-15")))
weekly.shidagaura.plot <- ggplot(data = weekly.shidagaura.data, aes(x = Date, y = Incidence)) +
geom_point() +
geom_segment(aes(xend = Date, yend = 0 )) +
labs(x="",y = expression(atop(paste(bold("Site 1")), paste("Incidence")))) +
geom_hline(yintercept = 0, color = "grey") +
theme_pubr() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_text (size = 10),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
axis.ticks.x = element_blank())+
scale_x_date(expand = c(0,0)) +
scale_y_continuous(expand = c(0.01,0), limits = c(-2,30))+
coord_cartesian(xlim = c(as.Date("2019-05-24"), as.Date("2020-02-15")))
(mhw2.plot/weekly.shidagaura.plot/weekly.suzaki.plot) + plot_annotation(tag_levels = "A")
ggsave(filename = "Figure Newww.png")
# Detect the events in a time series
OISST <- readRDS("shimoda_time_series_updated.rda")
ts <- ts2clm(OISST, climatologyPeriod = c("1982-01-01", "2011-12-31"))
mhw <- detect_event(ts)
mhw2 <- mhw$climatology %>%
filter(between(t, as.Date("2019-05-24"), as.Date("2020-02-15")))
mhw2.plot <- ggplot(data = mhw2, aes(x = t)) +
geom_line(aes(y = temp, colour = "temp")) +
geom_line(aes(y = thresh, colour = "thresh"), size = 0.5, lty = "solid") +
geom_line(aes(y = seas, colour = "seas"), size = 0.5, lty = "dotted") +
geom_flame(aes(y = temp, y2 = thresh, fill = "event"), show.legend = T) +
scale_colour_manual(name = "Line Colour",
values = c("temp" = "black",
"thresh" =  "grey60",
"seas" = "black")) +
scale_fill_manual(name = "Event Colour",
values = c("event" = "red")) +
scale_x_date(expand = c(0,0), date_breaks = "1 month", date_labels = "%b %Y") +
guides(colour = guide_legend(override.aes = list(fill = NA))) +
labs(y= expression(atop(paste(bold("Daily SST")), paste("( ",degree ~C," )"))))  +
coord_cartesian(xlim = c(as.Date("2019-05-24"), as.Date("2020-02-15")), ylim = c(15, 30)) +
theme_pubr() + theme(legend.position = "none") +
theme(
axis.title.x = element_blank(),
axis.title.y = element_text (size = 9),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
axis.ticks.x = element_blank(),
plot.margin = margin(6,6,3,6, unit = "pt")) +
scale_y_continuous(expand = c(0,0), limits = c(-2,30))
#########################
#read data
weekly.suzaki.data <- read_csv("2019_Incidence_2.5_Suzaki.csv") %>%
mutate(Date = as.Date(Date))  %>%
filter(between(Date, as.Date("2019-05-24"), as.Date("2020-02-15")))
weekly.shidagaura.data <- read_csv("2019_Incidence_2.5.recheck.csv")%>%
mutate(Date = as.Date(Date))  %>%
filter(between(Date, as.Date("2019-05-24"), as.Date("2020-02-15")))
#suzaki plot
weekly.suzaki.plot <- ggplot(data = weekly.suzaki.data, aes(x = Date, y = Incidence)) +
geom_point() +
geom_segment(aes(xend = Date, yend = 0 )) +
labs(x="",y = expression(atop(paste(bold("Site 2")), paste("Incidence")))) +
geom_hline(yintercept = 0, color = "grey") +
theme_pubr() +
theme(
axis.title.x = element_text (size = 10),
axis.title.y = element_text (size = 10),
axis.text.x = element_text (size = 8),
axis.text.y = element_text(size = 8)) +
scale_x_date(expand = c(0.001,0),date_breaks = "1 month", date_labels = "%m-%y") +
scale_y_continuous(expand = c(0,0), limits = c(-2,30)) +
coord_cartesian(xlim = c(as.Date("2019-05-24"), as.Date("2020-02-15")))
weekly.shidagaura.plot <- ggplot(data = weekly.shidagaura.data, aes(x = Date, y = Incidence)) +
geom_point() +
geom_segment(aes(xend = Date, yend = 0 )) +
labs(x="",y = expression(atop(paste(bold("Site 1")), paste("Incidence")))) +
geom_hline(yintercept = 0, color = "grey") +
theme_pubr() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_text (size = 10),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
axis.ticks.x = element_blank())+
scale_x_date(expand = c(0.001,0)) +
scale_y_continuous(expand = c(0,0), limits = c(-2,30))+
coord_cartesian(xlim = c(as.Date("2019-05-24"), as.Date("2020-02-15")))
(mhw2.plot/weekly.shidagaura.plot/weekly.suzaki.plot) + plot_annotation(tag_levels = "A")
ggsave(filename = "Figure Newww.png")
# Detect the events in a time series
OISST <- readRDS("shimoda_time_series_updated.rda")
ts <- ts2clm(OISST, climatologyPeriod = c("1982-01-01", "2011-12-31"))
mhw <- detect_event(ts)
mhw2 <- mhw$climatology %>%
filter(between(t, as.Date("2019-05-24"), as.Date("2020-02-15")))
mhw2.plot <- ggplot(data = mhw2, aes(x = t)) +
geom_line(aes(y = temp, colour = "temp")) +
geom_line(aes(y = thresh, colour = "thresh"), size = 0.5, lty = "solid") +
geom_line(aes(y = seas, colour = "seas"), size = 0.5, lty = "dotted") +
geom_flame(aes(y = temp, y2 = thresh, fill = "event"), show.legend = T) +
scale_colour_manual(name = "Line Colour",
values = c("temp" = "black",
"thresh" =  "grey60",
"seas" = "black")) +
scale_fill_manual(name = "Event Colour",
values = c("event" = "red")) +
scale_x_date(expand = c(0,0), date_breaks = "1 month", date_labels = "%b %Y") +
guides(colour = guide_legend(override.aes = list(fill = NA))) +
labs(y= expression(atop(paste(bold("Daily SST")), paste("( ",degree ~C," )"))))  +
coord_cartesian(xlim = c(as.Date("2019-05-24"), as.Date("2020-02-15")), ylim = c(15, 30)) +
theme_pubr() + theme(legend.position = "none") +
theme(
axis.title.x = element_blank(),
axis.title.y = element_text (size = 9),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
axis.ticks.x = element_blank(),
plot.margin = margin(6,6,3,6, unit = "pt")) +
scale_y_continuous(expand = c(0,0), limits = c(-2,30))
#########################
#read data
weekly.suzaki.data <- read_csv("2019_Incidence_2.5_Suzaki.csv") %>%
mutate(Date = as.Date(Date))  %>%
filter(between(Date, as.Date("2019-05-24"), as.Date("2020-02-15")))
weekly.shidagaura.data <- read_csv("2019_Incidence_2.5.recheck.csv")%>%
mutate(Date = as.Date(Date))  %>%
filter(between(Date, as.Date("2019-05-24"), as.Date("2020-02-15")))
#suzaki plot
weekly.suzaki.plot <- ggplot(data = weekly.suzaki.data, aes(x = Date, y = Incidence)) +
geom_point() +
geom_segment(aes(xend = Date, yend = 0 )) +
labs(x="",y = expression(atop(paste(bold("Site 2")), paste("Incidence")))) +
geom_hline(yintercept = 0, color = "grey") +
theme_pubr() +
theme(
axis.title.x = element_text (size = 10),
axis.title.y = element_text (size = 10),
axis.text.x = element_text (size = 8),
axis.text.y = element_text(size = 8)) +
scale_x_date(expand = c(0.004,0),date_breaks = "1 month", date_labels = "%m-%y") +
scale_y_continuous(expand = c(0,0), limits = c(-2,30)) +
coord_cartesian(xlim = c(as.Date("2019-05-24"), as.Date("2020-02-15")))
weekly.shidagaura.plot <- ggplot(data = weekly.shidagaura.data, aes(x = Date, y = Incidence)) +
geom_point() +
geom_segment(aes(xend = Date, yend = 0 )) +
labs(x="",y = expression(atop(paste(bold("Site 1")), paste("Incidence")))) +
geom_hline(yintercept = 0, color = "grey") +
theme_pubr() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_text (size = 10),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
axis.ticks.x = element_blank())+
scale_x_date(expand = c(0.004,0)) +
scale_y_continuous(expand = c(0,0), limits = c(-2,30))+
coord_cartesian(xlim = c(as.Date("2019-05-24"), as.Date("2020-02-15")))
(mhw2.plot/weekly.shidagaura.plot/weekly.suzaki.plot) + plot_annotation(tag_levels = "A")
ggsave(filename = "Figure Newww.png")
# Detect the events in a time series
OISST <- readRDS("shimoda_time_series_updated.rda")
ts <- ts2clm(OISST, climatologyPeriod = c("1982-01-01", "2011-12-31"))
mhw <- detect_event(ts)
mhw2 <- mhw$climatology %>%
filter(between(t, as.Date("2019-05-24"), as.Date("2020-02-15")))
mhw2.plot <- ggplot(data = mhw2, aes(x = t)) +
geom_line(aes(y = temp, colour = "temp")) +
geom_line(aes(y = thresh, colour = "thresh"), size = 0.5, lty = "solid") +
geom_line(aes(y = seas, colour = "seas"), size = 0.5, lty = "dotted") +
geom_flame(aes(y = temp, y2 = thresh, fill = "event"), show.legend = T) +
scale_colour_manual(name = "Line Colour",
values = c("temp" = "black",
"thresh" =  "grey60",
"seas" = "black")) +
scale_fill_manual(name = "Event Colour",
values = c("event" = "red")) +
scale_x_date(expand = c(0.004,0), date_breaks = "1 month", date_labels = "%b %Y") +
guides(colour = guide_legend(override.aes = list(fill = NA))) +
labs(y= expression(atop(paste(bold("Daily SST")), paste("( ",degree ~C," )"))))  +
coord_cartesian(xlim = c(as.Date("2019-05-24"), as.Date("2020-02-15")), ylim = c(15, 30)) +
theme_pubr() + theme(legend.position = "none") +
theme(
axis.title.x = element_blank(),
axis.title.y = element_text (size = 9),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
axis.ticks.x = element_blank(),
plot.margin = margin(6,6,3,6, unit = "pt")) +
scale_y_continuous(expand = c(0,0), limits = c(-1,30))
#########################
#read data
weekly.suzaki.data <- read_csv("2019_Incidence_2.5_Suzaki.csv") %>%
mutate(Date = as.Date(Date))  %>%
filter(between(Date, as.Date("2019-05-24"), as.Date("2020-02-15")))
weekly.shidagaura.data <- read_csv("2019_Incidence_2.5.recheck.csv")%>%
mutate(Date = as.Date(Date))  %>%
filter(between(Date, as.Date("2019-05-24"), as.Date("2020-02-15")))
#suzaki plot
weekly.suzaki.plot <- ggplot(data = weekly.suzaki.data, aes(x = Date, y = Incidence)) +
geom_point() +
geom_segment(aes(xend = Date, yend = 0 )) +
labs(x="",y = expression(atop(paste(bold("Site 2")), paste("Incidence")))) +
geom_hline(yintercept = 0, color = "grey") +
theme_pubr() +
theme(
axis.title.x = element_text (size = 10),
axis.title.y = element_text (size = 10),
axis.text.x = element_text (size = 8),
axis.text.y = element_text(size = 8)) +
scale_x_date(expand = c(0.004,0),date_breaks = "1 month", date_labels = "%m-%y") +
scale_y_continuous(expand = c(0,0), limits = c(-1,30)) +
coord_cartesian(xlim = c(as.Date("2019-05-24"), as.Date("2020-02-15")))
weekly.shidagaura.plot <- ggplot(data = weekly.shidagaura.data, aes(x = Date, y = Incidence)) +
geom_point() +
geom_segment(aes(xend = Date, yend = 0 )) +
labs(x="",y = expression(atop(paste(bold("Site 1")), paste("Incidence")))) +
geom_hline(yintercept = 0, color = "grey") +
theme_pubr() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_text (size = 10),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 8),
axis.ticks.x = element_blank())+
scale_x_date(expand = c(0.004,0)) +
scale_y_continuous(expand = c(0,0), limits = c(-1,30))+
coord_cartesian(xlim = c(as.Date("2019-05-24"), as.Date("2020-02-15")))
(mhw2.plot/weekly.shidagaura.plot/weekly.suzaki.plot) + plot_annotation(tag_levels = "A")
ggsave(filename = "Figure Newww.png")
knitr::opts_chunk$set(echo = FALSE,
fig.path = "figures/",
message = FALSE,
warning = FALSE,
dev = c("png", "pdf", "ps"))
library("scales")
library("ggplot2")
library("forcats")
library("tibble")
library("ggpubr")
library("patchwork")
library("dplyr")
library("tidyverse")
library("heatwaveR") # For detecting MHWs
library("phyloseq") #For ASV input
library("RColorBrewer")
Sys.setlocale("LC_ALL","English")
ASV_list <- read.csv("4_ASV_Percent.csv")
Taxa_list <- read.csv("Four_taxa.csv")
ASV <- otu_table(ASV_list, taxa_are_rows = TRUE)
TAX <- tax_table(as.matrix(Taxa_list))
physeq_all = phyloseq(ASV, TAX)
physeq_all_G = tax_glom(physeq_all, "Genus")
physeq_all_G_heatmap <- psmelt(physeq_all_G)
physeq_all_G_heatmap2 <- physeq_all_G_heatmap
physeq_all_G_heatmap2$Sample <- factor(physeq_all_G_heatmap2$Sample,
levels = c("ï..Disease", "Gelidium", "Health", "Sediment"),
labels = c("a","b", "c", "d"), ordered=TRUE)
physeq_names <-
physeq_all_G_heatmap2 %>%
mutate(Group = paste(as.character(Family), as.character(Genus), sep = " - ")) %>%
pivot_wider(values_from = Abundance, names_from = Sample) %>%
select(c("Group", "a","b", "c", "d")) %>%
arrange(-a,-b,-c,-d)
physeq_all_G_heatmap$Sample <- factor(physeq_all_G_heatmap$Sample,
levels = c("ï..Disease", "Gelidium", "Health", "Sediment"),
labels = c("WMS","G. Elegans", "Healthy Coral", "Sediment"), ordered=TRUE)
physeq_all_G_heatmap_edit <- physeq_all_G_heatmap %>%
mutate(Group=paste(Family, Genus, sep = " - ")) %>%
mutate(Group=factor(Group,levels=rev(physeq_names$Group))) %>%
mutate(Abundfactor=cut(Abundance,breaks=c(-1,0,0.001,0.01,0.05,0.1,0.25,0.5, 1),
labels=c("0","0-0.1","0.1-1","1-5","5-10","10-25","25-50","50-100"))) %>%
mutate(Abundfactor=factor(as.character(Abundfactor),levels=rev(levels(Abundfactor)))) %>%
na.omit()
textcol <- "grey40"
heatmap.plot <- ggplot(data = physeq_all_G_heatmap_edit_sub, mapping = aes(x = Sample,y = Group,fill = Abundfactor)) +
geom_tile() +
xlab(label = "") +
theme_bw() +
scale_fill_manual(values=rev(brewer.pal(8,"Blues")),na.value="grey90") +
scale_y_discrete(expand=c(0,0)) +
scale_x_discrete(expand=c(0,0)) +
theme(legend.position="right",legend.direction="vertical",
legend.title=element_blank(),
legend.margin=margin(grid::unit(0,"cm")),
legend.text=element_text(colour=textcol,size=6,face="bold"),
legend.key.height=grid::unit(0.8,"cm"),
legend.key.width=grid::unit(0.2,"cm"),
axis.text.x=element_text(size=8,colour=textcol),
axis.text.y=element_text(size=8, vjust=0.2,colour=textcol),
axis.ticks=element_line(size=0.4),
axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
plot.background=element_blank(),
panel.border=element_blank(),
plot.margin=margin(0.7,0.4,0.1,0.2,"cm"),
plot.title=element_text(colour=textcol,hjust=0,size=14,face="bold"))
textcol <- "grey40"
heatmap.plot <- ggplot(data = physeq_all_G_heatmap_edit, mapping = aes(x = Sample,y = Group,fill = Abundfactor)) +
geom_tile() +
xlab(label = "") +
theme_bw() +
scale_fill_manual(values=rev(brewer.pal(8,"Blues")),na.value="grey90") +
scale_y_discrete(expand=c(0,0)) +
scale_x_discrete(expand=c(0,0)) +
theme(legend.position="right",legend.direction="vertical",
legend.title=element_blank(),
legend.margin=margin(grid::unit(0,"cm")),
legend.text=element_text(colour=textcol,size=6,face="bold"),
legend.key.height=grid::unit(0.8,"cm"),
legend.key.width=grid::unit(0.2,"cm"),
axis.text.x=element_text(size=8,colour=textcol),
axis.text.y=element_text(size=8, vjust=0.2,colour=textcol),
axis.ticks=element_line(size=0.4),
axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
plot.background=element_blank(),
panel.border=element_blank(),
plot.margin=margin(0.7,0.4,0.1,0.2,"cm"),
plot.title=element_text(colour=textcol,hjust=0,size=14,face="bold"))
heatmap.plot
